import re
from pathlib import Path
import pandas as pd
from django.core.management.base import BaseCommand
from main.models import UserAccount


class Command(BaseCommand):
    help = "–ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö (–ë–ò–ù –∏ –§–ò–û —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è) –∏–∑ –ø–µ—Ä–≤—ã—Ö 8 –ª–∏—Å—Ç–æ–≤ Excel"

    def handle(self, *args, **options):
        # üìÇ –£–∫–∞–∂–∏ –ø—É—Ç—å –∫ Excel-—Ñ–∞–π–ª—É
        excel_path = Path("main/management/commands/excel_date/–ö–æ–ø–∏—è –°–ü–ò–°–û–ö_–î–õ–Ø_–û–¢–î–ï–õ–û–í_–ê–ö–ò–ú–ê–¢–ê_–æ–±—â–∏–∏ÃÜ_(1)(1).xls")

        if not excel_path.exists():
            self.stderr.write(self.style.ERROR(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {excel_path.resolve()}"))
            return

        # –°—á–∏—Ç—ã–≤–∞–µ–º –∏–º–µ–Ω–∞ –≤—Å–µ—Ö –ª–∏—Å—Ç–æ–≤
        xls = pd.ExcelFile(excel_path)

        # –ë–µ—Ä—ë–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 8
        sheet_names = xls.sheet_names[:10]

        added = 0
        skipped = 0

        for sheet in sheet_names:
            self.stdout.write(self.style.NOTICE(f"üìÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª–∏—Å—Ç–∞: {sheet}"))
            df = pd.read_excel(xls, sheet_name=sheet, dtype=str).fillna("")

            # –ü–æ–∏—Å–∫ –∫–æ–ª–æ–Ω–æ–∫
            col_bin, col_name = None, None
            for c in df.columns:
                low = str(c).lower()
                if "–±–∏–Ω" in low:
                    col_bin = c
                elif "–±–∞—Å—à—ã" in low or "—Ñ–∏–æ" in low or "—Ç–∞”ô" in low:
                    col_name = c

            if not col_bin or not col_name:
                self.stderr.write(self.style.WARNING(f"‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω –ª–∏—Å—Ç '{sheet}' ‚Äî –Ω–µ—Ç –Ω—É–∂–Ω—ã—Ö –∫–æ–ª–æ–Ω–æ–∫"))
                continue

            for _, row in df.iterrows():
                bin_val = str(row.get(col_bin, "")).strip()
                name_raw = str(row.get(col_name, "")).strip()

                # –ï—Å–ª–∏ –ë–ò–ù –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π –∏–ª–∏ –ø—É—Å—Ç–æ–π ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
                if not bin_val or not re.match(r"^\d{12}$", bin_val):
                    continue

                full_name = name_raw.strip()
                if not full_name:
                    continue

                email = f"{bin_val}@mail.ru"

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
                if UserAccount.objects.filter(iin=bin_val).exists():
                    skipped += 1
                    continue

                # –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
                UserAccount.objects.create(
                    iin=bin_val,  # –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ–ª–µ iin, –µ—Å–ª–∏ –≤ –º–æ–¥–µ–ª–∏ –Ω–µ—Ç –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ "bin"
                    full_name=full_name,
                    email=email,
                    password="Aa123456",
                    status="pending"
                )
                added += 1

        self.stdout.write(
            self.style.SUCCESS(
                f"‚úÖ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à—ë–Ω: –¥–æ–±–∞–≤–ª–µ–Ω–æ {added}, –ø—Ä–æ–ø—É—â–µ–Ω–æ {skipped}\n"
                f"üìÇ –ò—Å—Ç–æ—á–Ω–∏–∫: {excel_path.resolve()}"
            )
        )
