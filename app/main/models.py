from django.db import models


class UserAccount(models.Model):
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    iin = models.CharField("–ò–ò–ù", max_length=20, unique=True)
    full_name = models.CharField("–§–ò–û", max_length=255)
    email = models.EmailField("Email", unique=True)
    password = models.CharField("–ü–∞—Ä–æ–ª—å", max_length=128, default="Aa123456")

    STATUS_CHOICES = [
        ('pending', 'üü° –í –æ—á–µ—Ä–µ–¥–∏'),
        ('registered', 'üü¢ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω'),
        ('tested', '‚úÖ –¢–µ—Å—Ç —Å–¥–∞–Ω'),
        ('completed', 'üìÑ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–∫–∞—á–∞–Ω'),
        ('failed', '‚ùå –û—à–∏–±–∫–∞'),
    ]
    status = models.CharField("–°—Ç–∞—Ç—É—Å", max_length=20, choices=STATUS_CHOICES, default='pending')

    score = models.CharField("–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞ (%)", max_length=10, blank=True, null=True)
    certificate_file = models.CharField("–ü—É—Ç—å –∫ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—É", max_length=255, blank=True, null=True)
    message = models.TextField("–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π / –æ—à–∏–±–∫–∞", blank=True, null=True)

    created_at = models.DateTimeField("–°–æ–∑–¥–∞–Ω", auto_now_add=True)
    updated_at = models.DateTimeField("–û–±–Ω–æ–≤–ª—ë–Ω", auto_now=True)

    def __str__(self):
        return f"{self.full_name} ({self.email})"

    class Meta:
        verbose_name = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        verbose_name_plural = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"


class AutomationLog(models.Model):
    """–•—Ä–∞–Ω–∏—Ç –∏—Å—Ç–æ—Ä–∏—é –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –∫–∞–∂–¥—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""
    user = models.ForeignKey(UserAccount, on_delete=models.CASCADE, related_name="logs")
    stage = models.CharField("–≠—Ç–∞–ø", max_length=50)
    success = models.BooleanField("–£—Å–ø–µ—à–Ω–æ", default=False)
    message = models.TextField("–°–æ–æ–±—â–µ–Ω–∏–µ", blank=True, null=True)
    created_at = models.DateTimeField("–î–∞—Ç–∞", auto_now_add=True)

    def __str__(self):
        return f"[{self.stage}] {self.user.full_name}"
